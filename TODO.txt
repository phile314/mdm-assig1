Before Thursday


    Send email (workspace, source code, report)



MV       Add documentation to ctree.r
MV/PH    Finish documentation for common.r
MV       Look why prediction performs worse for imperative

  Only split between consecutive rows with different class (optimization)
  Comparing performance

After Thursday
  Parameters
  Describe the analysis

Data analysis
  Leave out combinations of parameters in which
    nmin <= 2 * minleaf
  Because the second implies the first

Notes
  When searching the best split, the segment border optimization cannot be 
  used if the leafmin constraint is active.

Questions
  Efficient partitioning (slicing)
  Ask about corner case: Splits that do not improve the impurity might create
  leaves that have the same label. Is this sensible? Or should we enforce that
  they predict two different class labels.

  We think all the configurations in which
    nmin <= 2 * minleaf
  will have the same error rate.
  Do you agree?
  Due to this they are not independent.
  But still how should we search for the best configuration?
  Are there guidelines about how choosing those?
  E.G
    Should we first look for the best leafmin and then consider minleaf?
    The other way around?

  Does it need to be all in one single file?
    -> Code can be multiply files, but only ONE workspace

